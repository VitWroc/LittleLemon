#-------------------------Was the GetMaxQuantity() procedure properly implemented?
use LittleLemonDB;
drop procedure if exists GetMaxQuantity;
create procedure GetMaxQuantity() select max(Quantity) as GetMaxQuantity from Orders;
call GetMaxQuantity();
#-------------------------Was the ManageBooking() procedure properly implemented?
CREATE PROCEDURE LittleLemonDB.ManageBooking(IN booking_date DATE, IN table_number INT)
BEGIN
    DECLARE table_status VARCHAR(50);

    SELECT COUNT(*) INTO @table_count
    FROM `LittleLemonDB`.`Bookings`
    WHERE `Date` = booking_date AND `TableNumber` = table_number;

    IF (@table_count > 0) THEN
        SET table_status = 'Table is already booked.';
    ELSE
        SET table_status = 'Table is available.';
    END IF;

    SELECT table_status AS 'Table Status';
END;
CALL ManageBooking('2023-10-06', 3);
#-------------------------Was the UpdateBooking() procedure properly implemented?
CREATE PROCEDURE `LittleLemonDB`.`UpdateBooking`(
    IN booking_id_to_update INT, 
    IN new_booking_date DATE)
BEGIN
    UPDATE `LittleLemonDB`.`Bookings`
    SET `Date` = new_booking_date
    WHERE `BookingID` = booking_id_to_update;

    SELECT CONCAT('Booking ', booking_id_to_update, ' updated') AS 'Confirmation';
END;
#-------------------------Was the AddBooking() procedure properly implemented?
CREATE PROCEDURE `LittleLemonDB`.`AddBooking`(
    IN new_booking_id INT, 
    IN new_customer_id INT, 
    IN new_booking_date DATE, 
    IN new_table_number INT, 
    IN new_staff_id INT)
BEGIN
    INSERT INTO `LittleLemonDB`.`Bookings`(
        `BookingID`, 
        `CustomerID`, 
        `Date`, 
        `TableNumber`, 
        `StaffID`)
    VALUES(
        new_booking_id, 
        new_customer_id, 
        new_booking_date, 
        new_table_number,
        new_staff_id
    );

    SELECT 'New booking added' AS 'Confirmation';
END;
#-------------------------Was the CancelBooking() procedure properly implemented?
use LittleLemonDB;
drop procedure if exists CancelOrder;
delimiter \\
create procedure CancelOrder(Orderid int) 
begin
delete from Orders where OrderID=Orderid;
select concat("Order ", OrderID, " is cancelled") as Confirmation;
end\\
delimiter ;

call CancelOrder(5)
